"""Create tables

Revision ID: 20d2fc55f18a
Revises: 
Create Date: 2025-02-19 16:03:37.021198

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = '20d2fc55f18a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def table_exists(connection, table_name: str) -> bool:
    inspector = Inspector.from_engine(connection)
    return table_name in inspector.get_table_names()


def upgrade() -> None:
    connection = op.get_bind()

    if not table_exists(connection, 'userdata'):
        op.create_table(
            'userdata',
            sa.Column('user_id', sa.String(), nullable=False),
            sa.PrimaryKeyConstraint('user_id')
        )

    if not table_exists(connection, 'englishwordsdb'):
        op.create_table(
            'englishwordsdb',
            sa.Column('origin_word', sa.String(), nullable=False),
            sa.Column('user_id', sa.String(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['userdata.user_id']),
            sa.PrimaryKeyConstraint('origin_word', 'user_id')
        )

    if not table_exists(connection, 'ukrainianwordsdb'):
        op.create_table(
            'ukrainianwordsdb',
            sa.Column('origin_word', sa.String(), nullable=False),
            sa.Column('user_id', sa.String(), nullable=False),
            sa.ForeignKeyConstraint(['user_id'], ['userdata.user_id']),
            sa.PrimaryKeyConstraint('origin_word', 'user_id')
        )
def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ukrainianwordsdb')
    op.drop_table('englishwordsdb')
    op.drop_table('userdata')
    # ### end Alembic commands ###
